window.shikimori={POOL_REQUEST:"https://shikimori.one/api/",anime(t){return new this._anime(t)},animes(t){return new this._animes(t)},_animes:function(t={}){if("object"!=typeof t)throw"Invalid construction";return this.value={...this.DEF,...t},this},_asp:{value:{},_reset:!1,DEF:{limit:50,order:"ranked",status:"ongoing"},reset(){return this.value={},this},page(t){return"number"!=typeof t?this.value.page||0:(this.value.page=t,this)},limit(t){if("number"!=typeof t)throw"Limit must be a number";return this.value.limit=t,this},order(t){if(-1===["id","ranked","kind","popularity","name","aired_on","episodes","status","random",""].indexOf(t))throw"Invalid type of order";return this.value.order=t,this},kind(t){if(-1===["tv","movie","ova","ona","special","music","tv_13","tv_24","tv_48",""].indexOf(t))throw"Invalid type of kind";return this.value.kind=t,this},status(t){if(-1===["anons","ongoing","released",""].indexOf(t))throw"Invalid type of status";return this.value.status=t,this},season(t){return this.season=t,this},score(t){if("number"!=typeof t)throw"Score must be a number";return this.value.score=t,this},duration(t){if(-1===["S","D","F"].indexOf(t))throw"Invalid duration";return this.value.duration=t,this},rating(t){if(-1===["none","g","pg","pg_13","r","r_plus","rx"].indexOf(t))throw"Invalid duration";return this.value.rating=t,this},genre(t){return t.forEach(t=>{if("number"!=typeof t)throw"Genre id must be a number"}),this.value.genre=t,this},studio(t){return t.forEach(t=>{if("number"!=typeof t)throw"Studio id must be a number"}),this.value.studio=t,this},franchise(t,e,i){return this.value.franchise=arguments,this},censored(t){return this.value.censored=Boolean(t),this},ids(t){return t.forEach(t=>{if("number"!=typeof t)throw"Id must be a number"}),this.value.ids=t,this},exclude_ids(){let t=arguments;return t.forEach(t=>{if("number"!=typeof t)throw"Id must be a number"}),this.value.exclude_ids=t,this},search(t){return this.value.search=t.toString(),this},then(t,e=t){if("function"!=typeof t)throw"Callback must be a function";let i=this.value,r=Object.keys(i).map(t=>("object"==typeof i[t]?i[t]=Object.values(i[t]).join(","):i[t]=i[t].toString(),""===i[t]?"":`${t}=${i[t]}`)).join("&");return fetch(`${shikimori.POOL_REQUEST}animes?${r}`).then((i,r)=>{if(r)return e(i,r);i.ok&&i.json().then(e=>t(e))}),this}},_anime:function(t=0){if(isNaN(Number(t)))throw"Invalid construction";return this.id=Number(t),this},_ap:{id:0,request:"",roles(){return this._request="/roles",this},similar(){return this._request="/similar",this},related(){return this._request="/related",this},screenshots(){return this._request="/screenshots",this},franchise(){return this._request="/franchise",this},external_links(){return this._request="/external_links",this},topics(){return this._request="/topics",this},then(t,e=t){if("function"!=typeof t)throw"Callback must be a function";return fetch(`${shikimori.POOL_REQUEST}animes/${this.id}${this._request}`).then((i,r)=>{if(r)return e(i,r);i.ok&&i.json().then(e=>t(e))}),this}}},shikimori._animes.prototype=shikimori._asp,shikimori._anime.prototype=shikimori._ap;